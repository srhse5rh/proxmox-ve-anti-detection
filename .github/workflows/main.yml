name: build

on:
  push:
  workflow_dispatch:
    inputs:
      patch:
        description: "patch"
        required: false
        type: string
      commitid:
        description: "commitid"
        required: false
        type: string

env:
  patch: https://raw.githubusercontent.com/srhse5rh/qemu-anti-detection/main/qemu-8.1.0.patch
  commitid: e62423e6156b7bf9afd8b670722c66c93fd2ba45

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    defaults:
      run:
        shell: bash

    steps:
      - name: set env
        run: |
          if [ '${{ inputs.patch }}' != '' ];
          then
            echo "patch=${{ inputs.patch }}" >> "${{ github.env }}"
          fi
          if [ '${{ inputs.commitid }}' != '' ];
          then
            echo "commitid=${{ inputs.commitid }}" >> "${{ github.env }}"
          fi

      - uses: actions/checkout@v4

      - run: |
          apt update
          apt install git wget -y
          echo "deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription" | tee /etc/apt/sources.list.d/pve-no-subscription.list
          echo "deb http://download.proxmox.com/debian/devel bookworm main" | tee -a /etc/apt/sources.list.d/pve-devel.list
          wget "https://enterprise.proxmox.com/debian/proxmox-release-bookworm.gpg" -O /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg
          apt update
          apt install -y devscripts

      - run: |
          git config --global --add safe.directory '*'
          git clone git://git.proxmox.com/git/pve-qemu.git gitclone
          mv gitclone/* gitclone/.* .
          rm -r gitclone
          git reset --hard ${{ env.commitid }}
          # git rev-parse HEAD > hash-main
          git submodule status > hash-submodules

      - uses: actions/cache@v2
        with:
          path: qemu
          key: qemu-${{ hashFiles('hash-submodules') }}

      - run: |
          mk-build-deps -it "apt -y" debian/control

      - run: make submodule

      - run: |
          sed -i 's/# guest-agent is only required for guest systems/patch -p1 < 001-anti-detection.patch/' debian/rules
          sed -i 's/--disable-download//' debian/rules
          wget ${{ env.patch }} -O qemu/001-anti-detection.patch

      - run: make

      # - name: Run the build process with Docker
      #   uses: addnab/docker-run-action@v3
      #   with:
      #     image: debian:bookworm
      #     options: -v ${{ github.workspace }}:/build
      #     run: |
      #       apt update >/dev/null
      #       apt install git wget -y >/dev/null
      #       echo "deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription" > /etc/apt/sources.list.d/pve-install-repo.list
      #       echo "deb http://download.proxmox.com/debian/devel bookworm main" >> /etc/apt/sources.list
      #       wget https://enterprise.proxmox.com/debian/proxmox-release-bookworm.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg
      #       apt update >/dev/null
      #       apt install devscripts proxmox-ve -y >/dev/null
      #       cd build
      #       git clone git://git.proxmox.com/git/pve-qemu.git gitclone
      #       # mv gitclone/* gitclone/.* .
      #       cd gitclone
      #       mv $(ls -A) ..
      #       cd ..
      #       rm -r gitclone
      #       git config --global --add safe.directory "*"
      #       git reset --hard ${{ env.commitid }}
      #       git submodule update --init --recursive
      #       sed -i 's/# guest-agent is only required for guest systems/patch -p1 < 001-anti-detection.patch/' debian/rules
      #       sed -i 's/--disable-download//' debian/rules
      #       wget ${{ env.patch }} -O qemu/001-anti-detection.patch
      #       mk-build-deps --install --tool "apt-get -o Debug::pkgProblemResolver=yes -y" >/dev/null
      #       make
            
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          path: |
            *.deb
            *.buildinfo
            *.changes
