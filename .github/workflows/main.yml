name: build

on:
  push:
  workflow_dispatch:
    inputs:
      patch:
        description: "patch"
        required: false
        type: string
      commitid:
        description: "commitid"
        required: false
        type: string

env:
  patch: https://raw.githubusercontent.com/srhse5rh/qemu-anti-detection/main/qemu-8.1.0.patch
  commitid: e62423e6156b7bf9afd8b670722c66c93fd2ba45

jobs:
  setenv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: proxmox/pve-qemu
          fetch-depth: 0
          ref: ${{ env.commitid }}

      - name: set env
        run: |
          if [ '${{ inputs.patch }}' != '' ];
          then
            echo "patch=${{ inputs.patch }}" >> "${{ github.env }}"
          fi
          if [ '${{ inputs.commitid }}' != '' ];
          then
            echo "commitid=${{ inputs.commitid }}" >> "${{ github.env }}"
          fi
          echo "modulehash=$(git submodule status) > "${{ github.env }}"

  build:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    defaults:
      run:
        shell: bash
    needs: setenv

    steps:

      - name: build
        run: |
          apt-get update
          apt-get -y install sudo

      - name: build
        run: |
          sudo apt-get update
          sudo apt-get -y install git wget
          <<<"deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription" sudo tee /etc/apt/sources.list.d/pve-no-subscription.list
          <<<"deb http://download.proxmox.com/debian/devel bookworm main" sudo tee -a /etc/apt/sources.list.d/pve-devel.list
          sudo wget "https://enterprise.proxmox.com/debian/proxmox-release-bookworm.gpg" -O /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg

      # - name: Install
      #   continue-on-error: true
      #   run: |
      #     sudo sed -i 's/# deb-src/deb-src/g' /etc/apt/sources.list

      # - name: Install
      #   continue-on-error: true
      #   run: |
      #     sudo sed -i 's/^Types: deb/Types: deb deb-src/g' /etc/apt/sources.list.d/debian.sources

      - name: build
        run: |
          sudo apt-get update
          # sudo apt-get -y build-dep qemu
          sudo apt-get -y install devscripts

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: proxmox/pve-qemu
          fetch-depth: 0
          ref: ${{ env.commitid }}

      - run: |
          # git config --global --add safe.directory '*'
          # git clone git://git.proxmox.com/git/pve-qemu.git gitclone
          # mv gitclone/* gitclone/.* .
          # rm -r gitclone
          # git reset --hard ${{ env.commitid }}
          # git rev-parse HEAD > hash-main
          # git submodule status > hash-submodules

      - name: Install
        continue-on-error: true
        run: |
          sudo apt-get install equivs
          sudo mk-build-deps -it "apt -o Debug::pkgProblemResolver=yes -f -y"

      - name: Restore cached QEMU
        id: cache-qemu-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            qemu
          key: qemu-${{ env.modulehash }}

      - run: make submodule
        if: steps.cache-qemu-restore.outputs.cache-hit != 'true'
  
      - name: Save QEMU
        id: cache-primes-save
        uses: actions/cache/save@v4
        with:
          path: |
            qemu
          key: ${{ steps.cache-qemu-restore.outputs.cache-primary-key }}

      - run: |
          sed -i 's/# guest-agent is only required for guest systems/patch -p1 < 001-anti-detection.patch/' debian/rules
          sed -i 's/--disable-download//' debian/rules
          wget ${{ env.patch }} -O qemu/001-anti-detection.patch

      # - name: Debugging with tmate
      #   run: |
      #     sudo apt-get install tmate
      #     tmate -F new-session bash

      - run: make
            
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          path: |
            *.deb
            *.buildinfo
            *.changes
