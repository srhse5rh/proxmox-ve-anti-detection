name: pve-edk2-firmware

on:
  push:
  workflow_dispatch:
    inputs:
      debug:
        description: "enable debug ssh"
        required: false
        type: boolean
      patchs:
        description: "patch"
        required: false
        type: string
      commitid:
        description: "commitid"
        required: false
        type: string

env:
  patchs: https://github.com/srhse5rh/proxmox-ve-anti-detection/raw/main/pve-edk2-firmware.patch
  commitid: 17443032f78eaf9ae276f8df9d10c64beec2e048

jobs:
  setenv:
    runs-on: ubuntu-latest

    steps:
      - name: set env
        run: |
          if [ '${{ inputs.patchs }}' != '' ];
          then
            echo "patchs=${{ inputs.patchs }}" >> "${{ github.env }}"
          fi
          if [ '${{ inputs.commitid }}' != '' ];
          then
            echo "commitid=${{ inputs.commitid }}" >> "${{ github.env }}"
          fi

  build:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    defaults:
      run:
        shell: bash
    needs: setenv

    steps:

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     detached: true
      #     sudo: false

      - name: install sudo
        run: |
          apt-get update
          apt-get -y install sudo

      - name: add apt source
        run: |
          sudo apt-get update
          sudo apt-get -y install git wget
          # sudo tee /etc/apt/sources.list.d/pve-no-subscription.list <<<"deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription"
          # sudo tee -a /etc/apt/sources.list.d/pve-devel.list <<<"deb http://download.proxmox.com/debian/devel bookworm main"
          # sudo wget "https://enterprise.proxmox.com/debian/proxmox-release-bookworm.gpg" -O /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg

      # - name: add apt src source 1
      #   continue-on-error: true
      #   run: |
      #     sudo sed -i 's/# deb-src/deb-src/g' /etc/apt/sources.list

      # - name: add apt src source 2
      #   continue-on-error: true
      #   run: |
      #     sudo sed -i 's/^Types: deb/Types: deb deb-src/g' /etc/apt/sources.list.d/debian.sources

      - name: install devscripts
        run: |
          sudo apt-get update
          # sudo apt-get -y build-dep qemu
          sudo apt-get -y install devscripts

      # - name: checkout
      #   uses: actions/checkout@v4
      #   with:
      #     repository: srhse5rh/pve-edk2-firmware
      #     fetch-depth: 0
      #     submodules: 'true'
      #     ref: ${{ env.commitid }}

      - name: clone repo
        run: |
          git config --global --add safe.directory '*'
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git clone --recurse-submodules git://git.proxmox.com/git/pve-edk2-firmware.git gitclone
          mv gitclone/* gitclone/.* .
          rm -r gitclone
          git reset --hard ${{ env.commitid }}
          git rev-parse HEAD > hash-main
          git submodule status > hash-submodules

      - name: install build deps
        continue-on-error: true
        run: |
          sudo apt-get install equivs
          sudo mk-build-deps -it "apt-get -f -y"

      - name: restore cached
        id: cache-qemu-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            .git/modules
          key: qemu-${{ hashFiles('hash-submodules') }}

      - name: make submodules
        run: |
          make submodule
  
      - name: save cache
        id: cache-primes-save
        uses: actions/cache/save@v4
        with:
          path: |
            qemu
          key: ${{ steps.cache-qemu-restore.outputs.cache-primary-key }}

      - name: apply patch
        run: |
          git revert 334229c40993f947a48cfe3b9ac047b19bd62acc
          cd edk2
          git apply $patchs
          # num=1
          # for i in $patchs; do
          #   wget "$i" -O $num.patch
          #   git apply < $num.patch
          #   echo apply patch $num
          #   ((num++))
          # done
          
      - run: make
            
      - name: upload build artifacts
        uses: actions/upload-artifact@v4.3.1
        with:
          name: pve-edk2-firmware-${{ env.commitid }}
          path: |
            *.deb
            *.buildinfo
            *.changes

      - name: debugging with tmate if failure
        timeout-minutes: 10
        if: failure()
        run: |
          sudo apt-get -y install tmate
          tmate -F new-session bash

      - name: debugging with tmate if enable debug
        if: inputs.debug
        run: |
          sudo apt-get -y install tmate
          tmate -F new-session bash
